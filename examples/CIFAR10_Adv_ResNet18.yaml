# An Example Configuration for Adversarially Training A ResNet18 Model on Cifar10

# ---- Objective ----
objective_type: ClassificationAdversarialObjective  # Type of objective to use
objective_kwargs:
  criterion_type: LSCrossEntropy         # Type of criterion to use
  criterion_kwargs:
    smooth: 0.2
  adv_loss_coef: 1.0
  adv_reward_coef: 0.5
  adversary_type: PGD
  adversary_kwargs:
    epsilon: 0.03137254901960784
    n_step: 7
    step_size: 0.00784313725490196
    rand_init: true
    criterion_type: CrossEntropyLoss
    criterion_kwargs: {}
    eval_mode: true      

# ---- Model ----
model_type: CifarResNet   # Model to train or test
model_kwargs:
  block: BasicBlock
  num_blocks: [2, 2, 2, 2, 2]
  num_classes: 10

# ---- Dataset ----
dataset_type: Cifar10  # Dataset to load
dataset_kwargs:
  path: ~/dltorch_plugins/data/CIFAR10  # Path
  train_transforms: {  # Trainset transforms
    "RandomCrop": {"size": 32, "padding": 4},
    "RandomHorizontalFlip": {},
    "ToTensor": {}
    }
  test_transforms: {  # Testset transforms
    "ToTensor": {}
    }
    
# ---- Trainer ----
trainer_type: CNNTrainer  # Trainer type
trainer_kwargs:  # Trainer kwargs
  # Dataloader kwargs
  dataloader_kwargs:
    batch_size: 128
    num_workers: 2
    shuffle: true
    drop_last: false
  # Optimizer
  optimizer_type: SGD  # Optimizer type
  optimizer_kwargs:  # Optimizer kwargs
    lr: 0.05
    momentum: 0.9
    nesterov: True
    weight_decay: 0.0005
  # Lr scheduler
  lr_scheduler_type: MultiStepLR  # Lr scheduler type
  lr_scheduler_kwargs:  # Lr scheduler kwargs
    gamma: 0.1
    milestones: [100, 105]
  # Other cfgs
  epochs: 110
  save_as_state_dict: true
  test_every: 1
  grad_clip: 5.0
  eval_no_grad: false
  early_stop: true
  trainset_portion: [0.9, 0.1]
